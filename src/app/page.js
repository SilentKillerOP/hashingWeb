"use client";
import { useState } from "react";
import CryptoJS from "crypto-js";
import "tailwindcss/tailwind.css";
import CopyToClipboardButton from "./components/Copy_clipboard";
import Head from "next/head";

export default function Home() {
  const [inputText, setInputText] = useState("");
  const [hashDigests, setHashDigests] = useState([]);

  const handleInputChange = (e) => {
    const text = e.target.value;
    setInputText(text);
    computeHashDigests(text);
  };

  const computeHashDigests = (text) => {
    const algorithms = [
      { name: "MD5", function: CryptoJS.MD5 },
      { name: "RIPEMD160", function: CryptoJS.RIPEMD160 },
      { name: "SHA1", function: CryptoJS.SHA1 },
      { name: "SHA3", function: CryptoJS.SHA3 },
      { name: "SHA224", function: CryptoJS.SHA224 },
      { name: "SHA256", function: CryptoJS.SHA256 },
      { name: "SHA384", function: CryptoJS.SHA384 },
      { name: "SHA512", function: CryptoJS.SHA512 },
    ];
    const digests = algorithms.map(({ name, function: hashFunction }) => ({
      algorithm: name,
      digest: hashFunction(text).toString(),
    }));
    setHashDigests(digests);
  };

  return (
    <>
      <Head>
        <title>Hash Digests</title>
      </Head>
      <div
        className="bg-gradient-to-b from-white via-white to-gray-100 min-h-screen"
        style={{
          backgroundImage:
            "linear-gradient(rgba(255, 255, 255, 0.2), rgba(255, 255, 255, 0.2)), url(./crypto.jpg)",
          // background: "black",
          backgroundSize: "cover",
          backgroundBlendMode: "lighten",
          color: "black",
        }}
      >
        <h1 className="text-2xl mb-4 text-center bg-black text-white">
          See different hash digests for a given text
        </h1>
        <div className="container mx-auto px-4 py-8">
          <div className="max-w-md mx-auto bg-black text-white border-gray-300  p-6 rounded-md shadow-md">
            <div className="mb-4">
              <label htmlFor="inputText" className="mr-2 font-semibold">
                Input Text:
              </label>
              <input
                type="text"
                id="inputText"
                className="border border-gray-300 rounded p-2 bg-black text-white "
                value={inputText}
                onChange={handleInputChange}
              />
            </div>
          </div>

          {hashDigests.length > 0 && (
            <div className="max-w-md mx-auto bg-black text-white p-6 rounded-md shadow-md mt-4 overflow-auto">
              {hashDigests.map((digest) => (
                <div
                  key={digest.algorithm}
                  className="whitespace-normal break-all"
                >
                  {digest.algorithm}: {digest.digest}
                  <CopyToClipboardButton text={digest.digest} />
                  <br />
                </div>
              ))}
            </div>
          )}
          <div className="container mx-auto px-4 py-8">
          <div className="">
            <div className="max-w-2xl mx-auto bg-black text-white p-10  ">
              <h1 className="text-3xl font-bold mb-4 ">About</h1>

              <p className="mb-4">
                Welcome to our hashing website! We offer a unique approach to
                password security that allows you to use hash digests as your
                passwords. With our service, you can create strong and secure
                passwords in a way that is both easy to remember and highly
                resistant to unauthorized access.
              </p>

              <h2 className="text-xl font-bold mb-2">
                Using Hash Digests for Passwords
              </h2>

              <p className="mb-4">
                Traditionally, creating and remembering complex passwords can be
                a challenging task. However, by using hash digests, you can
                simplify this process while ensuring the security of your
                accounts.
              </p>

              <p className="mb-4">
                A hash digest is a unique, fixed-length string generated by
                applying a hashing algorithm to your original password. The
                resulting hash digest serves as a representation of your
                password, but it cannot be reversed or decrypted to retrieve the
                original password.
              </p>

              <h2 className="text-xl font-bold mb-2">
                Advantages of Hash Digests as Passwords
              </h2>

              <ul className="list-disc pl-6 mb-4">
                <li>
                  <strong>Enhanced Security:</strong> Hash digests provide a
                  high level of security because they are not susceptible to
                  password cracking techniques. Even if an attacker gains access
                  to the hash digest, it is extremely difficult to determine the
                  original password.
                </li>
                <li>
                  <strong>Simplicity:</strong> Hash digests are often shorter
                  and easier to remember compared to complex passwords. You can
                  generate a hash digest from a passphrase or a combination of
                  memorable words, making it easier for you to recall and use
                  your passwords across different platforms.
                </li>
                <li>
                  <strong>Unique Passwords:</strong> Since each hash digest is
                  unique, even if you use the same passphrase or words, the
                  resulting hash digests will be different for each account.
                  This ensures that your passwords remain unique and reduces the
                  risk of password reuse vulnerabilities.
                </li>
              </ul>

              <h2 className="text-xl font-bold mb-2">
                How to Use Hash Digests as Passwords
              </h2>

              <ol className="list-decimal pl-6 mb-4">
                <li>
                  Choose a passphrase or a combination of words that are
                  meaningful to you and easy to remember.
                </li>
                <li>
                  Use our hashing service to generate a hash digest from your
                  chosen passphrase or words.
                </li>
                <li>
                  When prompted for a password on a website or application,
                  enter the corresponding hash digest instead of the original
                  passphrase.
                </li>
                <li>
                  Our system will validate the hash digest against the stored
                  hash, ensuring a secure and seamless authentication process.
                </li>
              </ol>

              <p>
                Remember to keep your passphrase or words confidential and avoid
                sharing them with others. This way, you can leverage the
                benefits of hash digests while maintaining the security of your
                accounts.
              </p>
            </div>
          </div>
          </div>
        </div>
      </div>
    </>
  );
}
